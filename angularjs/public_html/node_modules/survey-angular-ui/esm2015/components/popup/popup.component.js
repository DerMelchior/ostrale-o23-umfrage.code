import { Component, Input, ViewChild } from "@angular/core";
import { BaseAngular } from "../../base-angular";
import { createPopupViewModel } from "survey-core";
import * as i0 from "@angular/core";
import * as i1 from "./popup-container.component";
export class PopupComponent extends BaseAngular {
    constructor(viewContainerRef, changeDetectorRef) {
        super(changeDetectorRef, viewContainerRef);
    }
    getModel() {
        return this.popupModel;
    }
    onModelChanged() {
        var _a;
        this.model = createPopupViewModel(this.popupModel, (_a = this.viewContainerRef) === null || _a === void 0 ? void 0 : _a.element.nativeElement);
    }
    ngAfterViewInit() {
        var _a, _b;
        if (!!((_a = this.containerRef) === null || _a === void 0 ? void 0 : _a.nativeElement)) {
            const container = this.containerRef.nativeElement;
            this.model.setComponentElement(container, this.getTarget ? this.getTarget(container.parentElement) : (_b = container === null || container === void 0 ? void 0 : container.parentElement) === null || _b === void 0 ? void 0 : _b.parentElement);
        }
    }
    ngOnInit() {
        this.onModelChanged();
    }
}
PopupComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: PopupComponent, deps: [{ token: i0.ViewContainerRef }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });
PopupComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: PopupComponent, selector: "sv-ng-popup, '[sv-ng-popup]'", inputs: { popupModel: "popupModel", getTarget: "getTarget" }, viewQueries: [{ propertyName: "containerRef", first: true, predicate: ["containerRef"], descendants: true }], usesInheritance: true, ngImport: i0, template: "<div #containerRef><sv-ng-popup-container [model]='model' ></sv-ng-popup-container></div>", isInline: true, components: [{ type: i1.PopupBaseContainerComponent, selector: "sv-ng-popup-container, '[sv-ng-popup-container]'", inputs: ["model"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: PopupComponent, decorators: [{
            type: Component,
            args: [{
                    selector: "sv-ng-popup, '[sv-ng-popup]'",
                    template: "<div #containerRef><sv-ng-popup-container [model]='model' ></sv-ng-popup-container></div>"
                }]
        }], ctorParameters: function () { return [{ type: i0.ViewContainerRef }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { popupModel: [{
                type: Input
            }], getTarget: [{
                type: Input
            }], containerRef: [{
                type: ViewChild,
                args: ["containerRef"]
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG9wdXAuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvcG9wdXAvcG9wdXAuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBcUIsU0FBUyxFQUFjLEtBQUssRUFBRSxTQUFTLEVBQW9CLE1BQU0sZUFBZSxDQUFDO0FBQzdHLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUNqRCxPQUFPLEVBQWtDLG9CQUFvQixFQUFFLE1BQU0sYUFBYSxDQUFDOzs7QUFPbkYsTUFBTSxPQUFPLGNBQWUsU0FBUSxXQUF1QjtJQVd6RCxZQUFZLGdCQUFrQyxFQUFFLGlCQUFvQztRQUNsRixLQUFLLENBQUMsaUJBQWlCLEVBQUUsZ0JBQWdCLENBQUMsQ0FBQztJQUM3QyxDQUFDO0lBTlMsUUFBUTtRQUNoQixPQUFPLElBQUksQ0FBQyxVQUFVLENBQUM7SUFDekIsQ0FBQztJQUtrQixjQUFjOztRQUMvQixJQUFJLENBQUMsS0FBSyxHQUFHLG9CQUFvQixDQUFDLElBQUksQ0FBQyxVQUFVLEVBQUUsTUFBQSxJQUFJLENBQUMsZ0JBQWdCLDBDQUFFLE9BQU8sQ0FBQyxhQUFhLENBQUMsQ0FBQztJQUNuRyxDQUFDO0lBQ0QsZUFBZTs7UUFDYixJQUFHLENBQUMsQ0FBQyxDQUFBLE1BQUEsSUFBSSxDQUFDLFlBQVksMENBQUUsYUFBYSxDQUFBLEVBQUU7WUFDckMsTUFBTSxTQUFTLEdBQUcsSUFBSSxDQUFDLFlBQVksQ0FBQyxhQUE0QixDQUFDO1lBQ2pFLElBQUksQ0FBQyxLQUFLLENBQUMsbUJBQW1CLENBQUMsU0FBUyxFQUFFLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsU0FBUyxDQUFDLGFBQTRCLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBQSxTQUFTLGFBQVQsU0FBUyx1QkFBVCxTQUFTLENBQUUsYUFBYSwwQ0FBRSxhQUFhLENBQUMsQ0FBQztTQUM5SjtJQUNILENBQUM7SUFDUSxRQUFRO1FBQ2YsSUFBSSxDQUFDLGNBQWMsRUFBRSxDQUFDO0lBQ3hCLENBQUM7OzRHQXpCVSxjQUFjO2dHQUFkLGNBQWMsdVFBSGYsMkZBQTJGOzRGQUcxRixjQUFjO2tCQUwxQixTQUFTO21CQUFDO29CQUNULFFBQVEsRUFBRSw4QkFBOEI7b0JBQ3hDLFFBQVEsRUFBRSwyRkFBMkY7aUJBQ3RHO3VJQUdVLFVBQVU7c0JBQWxCLEtBQUs7Z0JBQ0csU0FBUztzQkFBakIsS0FBSztnQkFDcUIsWUFBWTtzQkFBdEMsU0FBUzt1QkFBQyxjQUFjIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2hhbmdlRGV0ZWN0b3JSZWYsIENvbXBvbmVudCwgRWxlbWVudFJlZiwgSW5wdXQsIFZpZXdDaGlsZCwgVmlld0NvbnRhaW5lclJlZiB9IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XG5pbXBvcnQgeyBCYXNlQW5ndWxhciB9IGZyb20gXCIuLi8uLi9iYXNlLWFuZ3VsYXJcIjtcbmltcG9ydCB7IFBvcHVwQmFzZVZpZXdNb2RlbCwgUG9wdXBNb2RlbCwgY3JlYXRlUG9wdXBWaWV3TW9kZWwgfSBmcm9tIFwic3VydmV5LWNvcmVcIjtcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiBcInN2LW5nLXBvcHVwLCAnW3N2LW5nLXBvcHVwXSdcIixcbiAgdGVtcGxhdGU6IFwiPGRpdiAjY29udGFpbmVyUmVmPjxzdi1uZy1wb3B1cC1jb250YWluZXIgW21vZGVsXT0nbW9kZWwnID48L3N2LW5nLXBvcHVwLWNvbnRhaW5lcj48L2Rpdj5cIlxufSlcblxuZXhwb3J0IGNsYXNzIFBvcHVwQ29tcG9uZW50IGV4dGVuZHMgQmFzZUFuZ3VsYXI8UG9wdXBNb2RlbD4ge1xuICBASW5wdXQoKSBwb3B1cE1vZGVsITogUG9wdXBNb2RlbDtcbiAgQElucHV0KCkgZ2V0VGFyZ2V0PzogKGNvbnRhaW5lcjogSFRNTEVsZW1lbnQpID0+IEhUTUxFbGVtZW50O1xuICBAVmlld0NoaWxkKFwiY29udGFpbmVyUmVmXCIpIGNvbnRhaW5lclJlZiE6IEVsZW1lbnRSZWY8SFRNTERpdkVsZW1lbnQ+O1xuXG4gIHB1YmxpYyBtb2RlbCE6IFBvcHVwQmFzZVZpZXdNb2RlbDtcblxuICBwcm90ZWN0ZWQgZ2V0TW9kZWwoKTogUG9wdXBNb2RlbCB7XG4gICAgcmV0dXJuIHRoaXMucG9wdXBNb2RlbDtcbiAgfVxuXG4gIGNvbnN0cnVjdG9yKHZpZXdDb250YWluZXJSZWY6IFZpZXdDb250YWluZXJSZWYsIGNoYW5nZURldGVjdG9yUmVmOiBDaGFuZ2VEZXRlY3RvclJlZikge1xuICAgIHN1cGVyKGNoYW5nZURldGVjdG9yUmVmLCB2aWV3Q29udGFpbmVyUmVmKTtcbiAgfVxuICBwcm90ZWN0ZWQgb3ZlcnJpZGUgb25Nb2RlbENoYW5nZWQoKTogdm9pZCB7XG4gICAgdGhpcy5tb2RlbCA9IGNyZWF0ZVBvcHVwVmlld01vZGVsKHRoaXMucG9wdXBNb2RlbCwgdGhpcy52aWV3Q29udGFpbmVyUmVmPy5lbGVtZW50Lm5hdGl2ZUVsZW1lbnQpO1xuICB9XG4gIG5nQWZ0ZXJWaWV3SW5pdCgpOiB2b2lkIHtcbiAgICBpZighIXRoaXMuY29udGFpbmVyUmVmPy5uYXRpdmVFbGVtZW50KSB7XG4gICAgICBjb25zdCBjb250YWluZXIgPSB0aGlzLmNvbnRhaW5lclJlZi5uYXRpdmVFbGVtZW50IGFzIEhUTUxFbGVtZW50O1xuICAgICAgdGhpcy5tb2RlbC5zZXRDb21wb25lbnRFbGVtZW50KGNvbnRhaW5lciwgdGhpcy5nZXRUYXJnZXQgPyB0aGlzLmdldFRhcmdldChjb250YWluZXIucGFyZW50RWxlbWVudCBhcyBIVE1MRWxlbWVudCkgOiBjb250YWluZXI/LnBhcmVudEVsZW1lbnQ/LnBhcmVudEVsZW1lbnQpO1xuICAgIH1cbiAgfVxuICBvdmVycmlkZSBuZ09uSW5pdCgpIHtcbiAgICB0aGlzLm9uTW9kZWxDaGFuZ2VkKCk7XG4gIH1cbn0iXX0=